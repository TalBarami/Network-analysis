folder = 'C:\\Users\\Tal\\Dropbox\\Semester 7\\Application of Data Analysis Methods\\Assignments\\3\\part1'
setwd(folder)
folder = 'C:\\Users\\Tal\\Dropbox\\Semester 7\\Application of Data Analysis Methods\\Assignments\\3\\part2'
setwd(folder)
folder = 'C:\\Users\\Tal\\Dropbox\\Semester 7\\Application of Data Analysis Methods\\Assignments\\3\\part2'
setwd(folder)
folder = 'C:\\Users\\Tal\\Documents\\GitHub\\Network-analysis\\Network-analysis\\part2'
setwd(folder)
knitr::opts_knit$set(root.dir = folder)
folder = 'C:\\Users\\Tal\\Documents\\GitHub\\Network-analysis\\Network-analysis\\part2'
setwd(folder)
knitr::opts_knit$set(root.dir = folder)
#install.packages("twitteR")
#install.packages("httr")
#install.packages("base64enc")
#install.packages("jsonlite")
#install.packages("wordcloud")
#install.packages("tm")
# install.packages("igraph")
library(twitteR)
library(httr)
library(jsonlite)
library(wordcloud)
library(tm)
library(igraph)
source("resources\\twitterAuth.R")
user <- setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
search_result <- searchTwitter("#worldofwarcraft", 100)
tags <- twListToDF(search_result)
users <- tags$screenName
df <- twListToDF(lookupUsers(users))
edge1 <- c()
edge2 <- c()
for(i in 1:nrow(df)) {
user1 <- df[i,]
for(j in 1:nrow(df)){
user2 <- df[j,]
if(user1$screenName != user2$screenName && user1$location == user2$location){
edge1 <- c(edge1, user1$screenName)
edge2 <- c(edge2, user2$screenName)
}
}
}
edgelist <- cbind(from=edge1, to=edge2)
write.csv(edgelist, file="edgelist.csv", row.names = F)
write.csv(df, file="data.csv", row.names = F)
edgelist <- cbind(from=edge1, to=edge2)
write.csv(edgelist, file="resources\\edgelist.csv", row.names = F)
write.csv(df, file="resources\\data.csv", row.names = F)
folder = 'C:\\Users\\Tal\\Documents\\GitHub\\Network-analysis\\Network-analysis\\part2'
setwd(folder)
knitr::opts_knit$set(root.dir = folder)
#install.packages("twitteR")
#install.packages("httr")
#install.packages("base64enc")
#install.packages("jsonlite")
#install.packages("wordcloud")
#install.packages("tm")
# install.packages("igraph")
library(twitteR)
library(httr)
library(jsonlite)
library(wordcloud)
library(tm)
library(igraph)
source("resources\\twitterAuth.R")
user <- setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
search_result <- searchTwitter("#worldofwarcraft", 100)
tags <- twListToDF(search_result)
users <- tags$screenName
df <- twListToDF(lookupUsers(users))
edge1 <- c()
edge2 <- c()
for(i in 1:nrow(df)) {
user1 <- df[i,]
for(j in 1:nrow(df)){
user2 <- df[j,]
if(user1$screenName != user2$screenName && user1$location == user2$location){
edge1 <- c(edge1, user1$screenName)
edge2 <- c(edge2, user2$screenName)
}
}
}
edgelist <- cbind(from=edge1, to=edge2)
write.csv(edgelist, file="resources\\edgelist.csv", row.names = F)
write.csv(df, file="resources\\data.csv", row.names = F)
g.data <- read.csv('resources\\edgelist.csv', header=TRUE, stringsAsFactors=FALSE)
g.vrtx <- read.csv('resources\\data.csv', header=TRUE, stringsAsFactors=FALSE)
g <- graph.data.frame(g.data, vertices=g.vrtx, directed=FALSE)
folder = 'C:\\Users\\Tal\\Documents\\GitHub\\Network-analysis\\Network-analysis\\part2'
setwd(folder)
knitr::opts_knit$set(root.dir = folder)
#install.packages("twitteR")
#install.packages("httr")
#install.packages("base64enc")
#install.packages("jsonlite")
#install.packages("wordcloud")
#install.packages("tm")
# install.packages("igraph")
library(twitteR)
library(httr)
library(jsonlite)
library(wordcloud)
library(tm)
library(igraph)
source("resources\\twitterAuth.R")
user <- setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
search_result <- searchTwitter("#worldofwarcraft", 100)
tags <- twListToDF(search_result)
users <- tags$screenName
df <- twListToDF(lookupUsers(users))
edge1 <- c()
edge2 <- c()
vertices <- c()
for(i in 1:nrow(df)) {
user1 <- df[i,]
for(j in 1:nrow(df)){
user2 <- df[j,]
if(user1$screenName != user2$screenName && user1$location == user2$location){
edge1 <- c(edge1, user1$screenName)
edge2 <- c(edge2, user2$screenName)
}
}
if(!(user1$screenName %in% v)){
vertices <- c(vertices, user1$screenName)
}
}
edge1 <- c()
edge2 <- c()
vertices <- c()
for(i in 1:nrow(df)) {
user1 <- df[i,]
for(j in 1:nrow(df)){
user2 <- df[j,]
if(user1$screenName != user2$screenName && user1$location == user2$location){
edge1 <- c(edge1, user1$screenName)
edge2 <- c(edge2, user2$screenName)
}
}
if(!(user1$screenName %in% vertices)){
vertices <- c(vertices, user1$screenName)
}
}
folder = 'C:\\Users\\Tal\\Documents\\GitHub\\Network-analysis\\Network-analysis\\part2'
setwd(folder)
knitr::opts_knit$set(root.dir = folder)
#install.packages("twitteR")
#install.packages("httr")
#install.packages("base64enc")
#install.packages("jsonlite")
#install.packages("wordcloud")
#install.packages("tm")
# install.packages("igraph")
library(twitteR)
library(httr)
library(jsonlite)
library(wordcloud)
library(tm)
library(igraph)
source("resources\\twitterAuth.R")
user <- setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
search_result <- searchTwitter("#worldofwarcraft", 100)
tags <- twListToDF(search_result)
users <- tags$screenName
df <- twListToDF(lookupUsers(users))
edge1 <- c()
edge2 <- c()
vertices <- c()
for(i in 1:nrow(df)) {
user1 <- df[i,]
for(j in 1:nrow(df)){
user2 <- df[j,]
if(user1$screenName != user2$screenName && user1$location == user2$location){
edge1 <- c(edge1, user1$screenName)
edge2 <- c(edge2, user2$screenName)
}
}
if(!(user1$screenName %in% vertices)){
vertices <- c(vertices, user1$screenName)
}
}
edgelist <- cbind(from=edge1, to=edge2)
write.csv(edgelist, file="resources\\edgelist.csv", row.names = F)
write.csv(vertices, file="resources\\data.csv", row.names = F)
g.data <- read.csv('resources\\edgelist.csv', header=TRUE, stringsAsFactors=FALSE)
g.vrtx <- read.csv('resources\\data.csv', header=TRUE, stringsAsFactors=FALSE)
g <- graph.data.frame(g.data, vertices=g.vrtx, directed=FALSE)
plot(g, vertex.size = 4, vertex.label.dist = 2, asp = F)
folder = 'C:\\Users\\Tal\\Documents\\GitHub\\Network-analysis\\Network-analysis\\part2'
setwd(folder)
knitr::opts_knit$set(root.dir = folder)
#install.packages("twitteR")
#install.packages("httr")
#install.packages("base64enc")
#install.packages("jsonlite")
#install.packages("wordcloud")
#install.packages("tm")
# install.packages("igraph")
library(twitteR)
library(httr)
library(jsonlite)
library(wordcloud)
library(tm)
library(igraph)
source("resources\\twitterAuth.R")
user <- setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
search_result <- searchTwitter("#worldofwarcraft", 100)
tags <- twListToDF(search_result)
users <- tags$screenName
df <- twListToDF(lookupUsers(users))
edge1 <- c()
edge2 <- c()
vertices <- c()
for(i in 1:nrow(df)) {
user1 <- df[i,]
for(j in 1:nrow(df)){
user2 <- df[j,]
if(user1$screenName != user2$screenName && user1$location == user2$location){
edge1 <- c(edge1, user1$screenName)
edge2 <- c(edge2, user2$screenName)
}
}
if(!(user1$screenName %in% vertices)){
vertices <- c(vertices, user1$screenName)
}
}
edgelist <- cbind(from=edge1, to=edge2)
write.csv(edgelist, file="resources\\edgelist.csv", row.names = F)
write.csv(vertices, file="resources\\data.csv", row.names = F)
g.data <- read.csv('resources\\edgelist.csv', header=TRUE, stringsAsFactors=FALSE)
g.vrtx <- read.csv('resources\\data.csv', header=TRUE, stringsAsFactors=FALSE)
g <- graph.data.frame(g.data, vertices=g.vrtx, directed=FALSE)
plot(g, vertex.size = 4, vertex.label.dist = 2, asp = F)
g.components <- components(g)
largest_component <- which(g.components$membership == which.max(g.components$csize))
g.largest_component <- induced_subgraph(g, largest_component)
plot(g.largest_component, vertex.size = 4, vertex.label.dist = 2, asp = F)
bc <- betweenness(g.largest_component, directed = FALSE, weights = NULL, normalized = FALSE)
sort(bc, decreasing = T)[1:1]
cc <- closeness(g.largest_component, weights = NULL, normalized = FALSE)
sort(cc, decreasing = T)[1:1]
ec <- eigen_centrality(g.largest_component, directed = FALSE, weights = NULL, scale = FALSE, options = arpack_defaults)$vector
sort(ec, decreasing = T)[1:1]
girvan_newman <-  edge.betweenness.community(g)
girvan_newman
#modularity for each phase of the previous algorithm
girvan_newman$modularity
#best modularity score
max(girvan_newman$modularity)
#index (phase, i.e. partitioning) with the best score
which.max(girvan_newman$modularity)
#Store cluster ids for each vertex
gn_color <- membership(girvan_newman)
head(gn_color)
plot(g, vertex.size = 4, vertex.label.dist = 2, asp = F, vertex.color = gn_color)
g.simple <- simplify(g)
fastgreedy <- fastgreedy.community(g.simple)
fastgreedy$modularity
max(fastgreedy$modularity)
which.max(fastgreedy$modularity)
fg_color <- membership(fastgreedy)
head(fg_color)
View(df)
View(df)
View(tags)
View(tags)
edge1 <- c()
edge2 <- c()
vertices <- c()
for(i in 1:nrow(df)) {
user1 <- df[i,]
twit1 <- tags[i,]
for(j in 1:nrow(df)){
user2 <- df[j,]
twit1 <- tags[j,]
if(twit1$screenName != twit2$screenName && twit1$retweetCount == user2$retweetCount){
edge1 <- c(edge1, twit1$screenName)
edge2 <- c(edge2, twit2$screenName)
}
}
if(!(user1$screenName %in% vertices)){
vertices <- c(vertices, twit1$screenName)
}
}
edge1 <- c()
edge2 <- c()
vertices <- c()
for(i in 1:nrow(df)) {
user1 <- df[i,]
twit1 <- tags[i,]
for(j in 1:nrow(df)){
user2 <- df[j,]
twit2 <- tags[j,]
if(twit1$screenName != twit2$screenName && twit1$retweetCount == user2$retweetCount){
edge1 <- c(edge1, twit1$screenName)
edge2 <- c(edge2, twit2$screenName)
}
}
if(!(user1$screenName %in% vertices)){
vertices <- c(vertices, twit1$screenName)
}
}
print tags[1,]$screenName
print(tags[1,]$screenName)
print(tags[1,]$retweetCount)
edge1 <- c()
edge2 <- c()
vertices <- c()
for(i in 1:nrow(df)) {
user1 <- df[i,]
twit1 <- tags[i,]
for(j in 1:nrow(df)){
user2 <- df[j,]
twit2 <- tags[j,]
if(twit1$screenName != twit2$screenName && twit1$retweetCount == twit2$retweetCount){
edge1 <- c(edge1, twit1$screenName)
edge2 <- c(edge2, twit2$screenName)
}
}
if(!(user1$screenName %in% vertices)){
vertices <- c(vertices, twit1$screenName)
}
}
edgelist <- cbind(from=edge1, to=edge2)
write.csv(edgelist, file="resources\\edgelist.csv", row.names = F)
write.csv(vertices, file="resources\\data.csv", row.names = F)
g.data <- read.csv('resources\\edgelist.csv', header=TRUE, stringsAsFactors=FALSE)
g.vrtx <- read.csv('resources\\data.csv', header=TRUE, stringsAsFactors=FALSE)
g <- graph.data.frame(g.data, vertices=g.vrtx, directed=FALSE)
folder = 'C:\\Users\\Tal\\Documents\\GitHub\\Network-analysis\\Network-analysis\\part2'
setwd(folder)
knitr::opts_knit$set(root.dir = folder)
#install.packages("twitteR")
#install.packages("httr")
#install.packages("base64enc")
#install.packages("jsonlite")
#install.packages("wordcloud")
#install.packages("tm")
# install.packages("igraph")
library(twitteR)
library(httr)
library(jsonlite)
library(wordcloud)
library(tm)
library(igraph)
source("resources\\twitterAuth.R")
user <- setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
search_result <- searchTwitter("#worldofwarcraft", 50)
tags <- twListToDF(search_result)
users <- tags$screenName
df <- twListToDF(lookupUsers(users))
edge1 <- c()
edge2 <- c()
vertices <- c()
for(i in 1:nrow(df)) {
user1 <- df[i,]
twit1 <- tags[i,]
for(j in 1:nrow(df)){
user2 <- df[j,]
twit2 <- tags[j,]
if(twit1$screenName != twit2$screenName && twit1$retweetCount == twit2$retweetCount){
edge1 <- c(edge1, twit1$screenName)
edge2 <- c(edge2, twit2$screenName)
}
}
if(!(twit1$screenName %in% vertices)){
vertices <- c(vertices, twit1$screenName)
}
}
edgelist <- cbind(from=edge1, to=edge2)
write.csv(edgelist, file="resources\\edgelist.csv", row.names = F)
write.csv(vertices, file="resources\\data.csv", row.names = F)
g.data <- read.csv('resources\\edgelist.csv', header=TRUE, stringsAsFactors=FALSE)
g.vrtx <- read.csv('resources\\data.csv', header=TRUE, stringsAsFactors=FALSE)
g <- graph.data.frame(g.data, vertices=g.vrtx, directed=FALSE)
plot(g, vertex.size = 4, vertex.label.dist = 2, asp = F)
edge1 <- c()
edge2 <- c()
vertices <- c()
for(i in 1:nrow(df)) {
user1 <- df[i,]
twit1 <- tags[i,]
for(j in 1:nrow(df)){
user2 <- df[j,]
twit2 <- tags[j,]
if(twit1$screenName != twit2$screenName && twit1$favoriteCount == twit2$favoriteCount){
edge1 <- c(edge1, twit1$screenName)
edge2 <- c(edge2, twit2$screenName)
}
}
if(!(twit1$screenName %in% vertices)){
vertices <- c(vertices, twit1$screenName)
}
}
edgelist <- cbind(from=edge1, to=edge2)
write.csv(edgelist, file="resources\\edgelist.csv", row.names = F)
write.csv(vertices, file="resources\\data.csv", row.names = F)
g.data <- read.csv('resources\\edgelist.csv', header=TRUE, stringsAsFactors=FALSE)
g.vrtx <- read.csv('resources\\data.csv', header=TRUE, stringsAsFactors=FALSE)
g <- graph.data.frame(g.data, vertices=g.vrtx, directed=FALSE)
plot(g, vertex.size = 4, vertex.label.dist = 2, asp = F)
View(df)
View(df)
